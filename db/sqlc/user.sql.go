// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: user.sql

package db

import (
	"context"
	"database/sql"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  username, password_hash, email, token
) VALUES (
  $1, $2, $3, $4
)
RETURNING id, username, password_hash, email, token, created_at
`

type CreateUserParams struct {
	Username     string         `json:"username"`
	PasswordHash string         `json:"password_hash"`
	Email        string         `json:"email"`
	Token        sql.NullString `json:"token"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.Username,
		arg.PasswordHash,
		arg.Email,
		arg.Token,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.PasswordHash,
		&i.Email,
		&i.Token,
		&i.CreatedAt,
	)
	return i, err
}
